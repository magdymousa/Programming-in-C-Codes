#include <stdio.h>
#include <stdlib.h>
#include <time.h>    // time()
#include <assert.h>
#include "deck.h"

/*struct deck_t{
  card_t ** cards;
  size_t n_cards;
  };*/


void print_hand(deck_t * hand){
  int i = 0;
  for(i = 0;i < hand->n_cards;i++){
    print_card(*(hand->cards)[i]);
    }
}

int deck_contains(deck_t * d, card_t c) {
  size_t i = 0;
  for(i = 0;i < d->n_cards;i++){
    if((((d->cards)[i])->value) == c.value){
      if((((d->cards)[i])->suit) == c.suit){
	return 1;
      }
    }
  }
  
  return 0;
}
void swapp(deck_t *d,size_t x,size_t y){
  card_t * temp;  
  // printf("%ld  ,%ld\n",x,y);
    if(x != y){
    temp = (d->cards)[x];
    (d->cards)[x] =(d->cards)[y];
    (d->cards)[y] = temp;  
  }
}
void shuffle(deck_t * d){
  size_t num,i = 0,y=0;
  //time_t t;
  //  srand((unsigned) time(&t));
  for(i = 0; i < d->n_cards; i++){
    y++;
    num =((rand() % (d->n_cards))); 
    // printf("i >> %ld,num >> %ld\n",i,num);
    swapp(d,i,num);
    }
  
}

void assert_full_deck(deck_t * d) {
  /* int i;
  for(i = 0;i < d->n_cards;i++){
  }*/
}
